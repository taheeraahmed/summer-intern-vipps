// Code generated by go-swagger; DO NOT EDIT.

package summerstudents_backend_app

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// MerchantsPatchV0HandlerFunc turns a function with the right signature into a merchants patch v0 handler
type MerchantsPatchV0HandlerFunc func(MerchantsPatchV0Params) middleware.Responder

// Handle executing the request and returning a response
func (fn MerchantsPatchV0HandlerFunc) Handle(params MerchantsPatchV0Params) middleware.Responder {
	return fn(params)
}

// MerchantsPatchV0Handler interface for that can handle valid merchants patch v0 params
type MerchantsPatchV0Handler interface {
	Handle(MerchantsPatchV0Params) middleware.Responder
}

// NewMerchantsPatchV0 creates a new http.Handler for the merchants patch v0 operation
func NewMerchantsPatchV0(ctx *middleware.Context, handler MerchantsPatchV0Handler) *MerchantsPatchV0 {
	return &MerchantsPatchV0{Context: ctx, Handler: handler}
}

/*
	MerchantsPatchV0 swagger:route PATCH /v0/merchants/{vippsnummer} summerstudents-backend-app v0-api merchantsPatchV0

# Update a merchant

Fake update a merchant in the database
*/
type MerchantsPatchV0 struct {
	Context *middleware.Context
	Handler MerchantsPatchV0Handler
}

func (o *MerchantsPatchV0) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewMerchantsPatchV0Params()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
