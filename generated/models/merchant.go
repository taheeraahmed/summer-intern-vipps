// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Merchant merchant
//
// swagger:model Merchant
type Merchant struct {

	// cover Url
	CoverURL string `json:"coverUrl,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// greeting
	Greeting string `json:"greeting"`

	// has recurring
	HasRecurring bool `json:"hasRecurring,omitempty"`

	// logo Url
	LogoURL string `json:"logoUrl,omitempty"`

	// merchant name
	MerchantName string `json:"merchantName,omitempty"`

	// minimum amount
	MinimumAmount int64 `json:"minimumAmount"`

	// offers
	Offers []int64 `json:"offers"`

	// sales unit
	SalesUnit string `json:"salesUnit,omitempty"`

	// terms conditions
	TermsConditions string `json:"termsConditions,omitempty"`

	// vippsnummer
	Vippsnummer int64 `json:"vippsnummer,omitempty"`
}

// Validate validates this merchant
func (m *Merchant) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this merchant based on context it is used
func (m *Merchant) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Merchant) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Merchant) UnmarshalBinary(b []byte) error {
	var res Merchant
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
